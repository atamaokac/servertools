#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os, subprocess
import sys

user_exclude_filename = '.backupconf'
headers = [['in','include'], ['out','ex','exclude']]

def expandparentheses(S):
    base = []
    group = []
    t = -1
    while True:
        h = S.find('(', t+1)
        if h < 0:
            base.append(S[t+1:])
            break
        else:
            base.append(S[t+1:h])
            t = S.find(')', h+1)
            if t < 0:
                t = len(S)
            group.append(S[h+1:t].split('|'))

    N = len(group)
    if N == 0:
        return [S]
    ret = []
    pool = [(base[0],-1)] # s, d
    while pool:
        s, d = pool.pop()
        for u in group[d+1]:
            v = s + u + base[d+2]
            if d == N-2:
                ret.append(v)
            else:
                pool.append((v,d+1))
    return ret

if __name__ == '__main__':
    if len(sys.argv) < 4:
        print('Usage: {} exclude_list_file [rsync options...] from_dir to_dir'.format(sys.argv[0]))
        exit()

    options = sys.argv[2:-2]
    ex_list = sys.argv[1]
    targets = sys.argv[-2:]
    command = ['rsync']
    # options += ['-acAHX', '--delete', '--max-zize=100M']

    with open(ex_list, 'r') as f:
        excludes = f.readlines()

    for s in excludes:
        s = s.strip()
        s = s.split('#')[0]
        if len(s) == 0:
            continue
        for ex_target in expandparentheses(s):
            options.append('--exclude')
            options.append(ex_target)

    # exclusions by each user
    sourcedir = targets[0]
    users = os.listdir(sourcedir)
    if os.path.isdir(os.path.join(sourcedir, 'share')):
        users += [os.path.join('share', d) for d in os.listdir(os.path.join(sourcedir, 'share'))]
    useroptions = []
    optionname = ['--include', '--exclude']
    for user in users:
        ex_list = os.path.join(sourcedir, user, user_exclude_filename)
        if os.path.isfile(ex_list):
            with open(ex_list, 'r') as f:
                lines = f.readlines()
            for line in lines:
                line = line.strip()
                line = line.split('#')[0]
                if len(line) == 0 or '..' in line:
                    continue
                line_separated = line.split()
                if len(line_separated) < 2:
                    continue
                else:
                    h, target = line_separated[:2]
                    if target[0] == '/':
                        target = '/' + user + target
                    for i in range(2):
                        if h in headers[i]:
                            useroptions.extend([optionname[i], target])
                            break

    # Execute rsync
    subprocess.call(command + useroptions + options + targets)
